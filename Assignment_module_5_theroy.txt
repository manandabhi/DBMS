Q.1 What do you understand By Database?
A.1 A database is information that is set up for easy access, management and updating.
    Computer databases typically store aggregations of data records or files that contain information,
    such as sales transactions, customer data, financials and product information.


Q.2 What is Normalization?
A.2 Normalization is a database design technique that reduces data redundancy and eliminates undesirable characteristics like Insertion, Update and Deletion Anomalies.
    Normalization rules divides larger tables into smaller tables and links them using relationships.
    The purpose of Normalisation in SQL is to eliminate redundant (repetitive) data and ensure data is stored logically.


Q.3 What is Difference between DBMS and RDBMS?
A.3 
    ==> DBMS    -> A Software that provides a systematic way of creating, retrieving and managing data in databases.
		-> Stands for Database Management System.
		-> Stores data in a hierarchical form or navigational form as files.
		-> Normalization cannot be performed.

    ==> RDBMS   -> A DBMS that is based on the relational model introduced by E.F. Codd.
		-> Stands for Relational Database Management System.
		-> Stores data in tables and these tables are related to each other.
		-> Normalization can be performed.  

Q.4 What is MF Cod Rule of RDBMS Systems?
A.4 Codd’s rule describes what exceptional a DBMS requires to emerge a Relational Database Management System (RDBMS).
    A relational database management system must handle the database entirely through its relational capabilities.
    All data in a relational database, including table names, column names are defined logically through values in tables.

Q.5 What do you understand By Data Redundancy? 
A.5 Data redundancy is a condition created within a database or data storage technology in which the same piece of data is held in two separate places.

    This can mean two different fields within a single database, or two different spots in multiple software environments or platforms. Whenever data is repeated, it basically constitutes data redundancy.

    Data redundancy can occur by accident but is also done deliberately for backup and recovery purposes.

Q.6 What is DDL Interpreter? 
A.6 DDL Interpreter interprets the DDL statements and records the generated statements in the table containing metadata.
    DDL (Data Definition Language)
    ==> Create, Alter , Drop , Truncate	

Q.7 What is DML Compiler in SQL?
A.7 DML compiler translates DML statements in a query language into a low-level instruction and the generated instruction can be understood by Query Evaluation Engine.

Q.8 What is SQL Key Constraints writing an Example of SQL Key Constraints?
A.8 Constraints are the principles enforced on the information columns of a table.
    This ensures the accuracy and dependability of the information within the info. 
    SQL Server Constraints may well be either on a column level or a table level.
   
    NOT NULL constraint:-Ensures that a column cannot have NULL worth. 
			 NOT NULL constraint makes certain that a column doesn’t hold a NULL value. 
			 Once we don’t give worth for a specific column whereas inserting a record into a table, it takes NULL worth by default.
 			 By specifying a NULL constraint, we are able to take care that a specific column(s) cannot have NULL values.

		CREATE TABLE STUDENT (
			ROLL_NO INT NOT NULL,

			STU_NAME VARCHAR (20) NOT NULL,

			STU_AGE INT NOT NULL,

			STU_ADDRESS VARCHAR (600),

			PRIMARY KEY (ROLL_NO)

			);
Q.9 What is save Point? How to create a save Point write a Query?
A.9 => Savepoint is a command in SQL that is used with the rollback command.
    => It is a command in Transaction Control Language that is used to mark the transaction in a table.
    => Consider you are making a very long table, and you want to roll back only to a certain position in a table then; this can be achieved using the savepoint.

Q.10 What is trigger and how to create a Trigger in SQL? 
A.10 Triggers are stored programs, which are automatically executed or fired when some events occur.
	trigger:-
	DELIMITER $$

	CREATE TRIGGER t_view AFTER INSERT ON employee FOR EACH ROW

	BEGIN

		INSERT INTO t_view(Employee_id,First_name,last_name,Salary,Joining_date,Department,action_required)
	        VALUES(new.Employee_id,new.First_name,new.last_name,new.Salary,new.Joining_date,new.Department,'rec_inserted..!');

	END
	$$